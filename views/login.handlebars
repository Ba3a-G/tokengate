<style>
    .card {
        background-color: var(--color-surface);
        border-radius: 12px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.2);
        max-width: 400px;
        margin: 2rem auto;
        padding: 2rem;
    }
    .card-title {
        font-size: 1.5rem;
        font-weight: 600;
        margin-bottom: 1rem;
        text-align: center;
        color: var(--color-on-surface);
    }
    .form-group {
        margin-bottom: 1.5rem;
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .form-label {
        display: block;
        margin-bottom: 0.5rem;
        font-size: 0.875rem;
        color: var(--color-on-surface-variant);
        align-self: flex-start;
    }
    .form-input {
        width: 100%;
        padding: 0.75rem;
        border-radius: 8px;
        border: 1px solid var(--color-outline);
        background-color: var(--color-surface-variant);
        color: var(--color-on-surface);
        font-size: 1rem;
        font-family: 'Poppins', sans-serif;
        transition: border-color 0.3s, box-shadow 0.3s;
    }
    .form-input:focus {
        outline: none;
        border-color: var(--color-on-surface);
        box-shadow: 0 0 0 2px rgba(224,224,224,0.1);
    }
    .button {
        display: inline-block;
        border: none;
        border-radius: 8px;
        font-size: 0.875rem;
        font-weight: 500;
        padding: 0.75rem 1rem;
        text-align: center;
        text-decoration: none;
        transition: background-color 0.3s, box-shadow 0.3s;
        cursor: pointer;
        width: 100%;
        margin-bottom: 1rem;
        font-family: 'Poppins', sans-serif;
    }
    .button-primary {
        background-color: var(--color-surface-variant);
        color: var(--color-on-surface);
    }
    .button-primary:hover {
        background-color: var(--color-outline);
        box-shadow: 0 2px 4px rgba(0,0,0,0.2);
    }
    .button-outline {
        background-color: transparent;
        border: 1px solid var(--color-outline);
        color: var(--color-on-surface);
    }
    .button-outline:hover {
        background-color: var(--color-surface-variant);
    }
    .divider {
        display: flex;
        align-items: center;
        text-align: center;
        margin: 1.5rem 0;
        color: var(--color-on-surface-variant);
    }
    .divider::before,
    .divider::after {
        content: '';
        flex: 1;
        border-bottom: 1px solid var(--color-outline);
    }
    .divider span {
        padding: 0 0.5rem;
    }
    .button svg {
        width: 1.25rem;
        height: 1.25rem;
        margin-right: 0.5rem;
        vertical-align: middle;
    }
    .oauth-buttons {
        display: flex;
        flex-direction: column;
        align-items: center;
    }
    .error-message {
        color: #cf6679;
        text-align: center;
        margin-bottom: 1rem;
        font-size: 0.875rem;
    }
</style>

<div class="card">
    <h2 class="card-title">Login</h2>
    <div id="error-message" class="error-message" style="display: none;"></div>
        <div class="form-group">
            <label for="username" class="form-label">Username</label>
            <input type="text" id="username" name="username" class="form-input" required>
        </div>
        <div class="form-group">
            <label for="password" class="form-label">Password</label>
            <input type="password" id="password" name="password" class="form-input" required>
        </div>
        <div class="form-group">
            <button type="submit" class="button button-primary">Sign In</button>
        </div>
    </form>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    const form = document.getElementById('login-form');
    const errorMessage = document.getElementById('error-message');

    form.addEventListener('submit', function(e) {
        e.preventDefault();

        const username = document.getElementById('username').value;
        const password = document.getElementById('password').value;

        const data = {
            username: username,
            password: password
        };

        fetch('/login', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(data)
        })
        .then(response => response.json())
        .then(data => {
            if (data.ok) {
                const urlParams = new URLSearchParams(window.location.search);
                const redirectTo = urlParams.get('redirectTo') || '/';
                window.location.href = redirectTo;
            } else {
                errorMessage.textContent = data.message || 'Login failed. Please try again.';
                errorMessage.style.display = 'block';
            }
        })
        .catch(error => {
            console.error('Error:', error);
            errorMessage.textContent = 'An error occurred. Please try again later.';
            errorMessage.style.display = 'block';
        });
    });
});
</script>